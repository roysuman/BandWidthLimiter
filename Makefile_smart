# Makefile for shared library
CC = g++ # C compiler
CFLAGS = -D DEBUG=0 -c -fpic -Wall -Wextra -ldl -std=c++0x # C flags
LDFLAGS = -D DEBUG=0 -shared -Wall -Wextra -ldl -std=c++0x # linking flags
RM = rm -f  # rm command
libc.so.6:	overload.o fd.o registerEnv.o interface.o buffer.o objectpool.o ipc.o lock.o
	$(CC) $(LDFLAGS) -o $@  overload.o fd.o registerEnv.o interface.o buffer.o objectpool.o ipc.o lock.o

overload.o:	overload.cpp objectpool.cpp objectpool.hpp 
	$(CC) $(CFLAGS) overload.cpp
fd.o:	fd.cpp fd.hpp buffer.cpp buffer.hpp
	$(CC) $(CFLAGS) fd.cpp
registerEnv.o:	registerEnv.cpp registerEnv.hpp buffer.cpp buffer.hpp
	$(CC) $(CFLAGS) registerEnv.cpp
interface.o:	interface.cpp interface.hpp fd.cpp fd.hpp ipc.cpp ipc.hpp registerEnv.cpp registerEnv.hpp
	$(CC) $(CFLAGS) interface.cpp
buffer.o:	buffer.cpp buffer.hpp
	$(CC) $(CFLAGS) buffer.cpp
objectpool.o:	objectpool.cpp objectpool.hpp interface.hpp interface.cpp
	$(CC) $(CFLAGS) objectpool.cpp
ipc.o:	ipc.cpp ipc.hpp registerEnv.cpp registerEnv.hpp
	$(CC) $(CFLAGS)	ipc.cpp
lock.o:	lock.cpp lock.hpp
	$(CC) $(CFLAGS) lock.cpp
resilience:
	$(CC) -g resilience.cpp -lm -o  $@ -Wall -Wextra -std=c++0x
clean:
	$(RM) *.so* *.o resilience
